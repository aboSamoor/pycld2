environment:
  matrix:

    # Python 2.7.10 is the latest version and is not pre-installed.
    #
    #    - PYTHON: "C:\\Python27.10"
    #      PYTHON_VERSION: "2.7.10"
    #      PYTHON_ARCH: "32"
    #
    #    - PYTHON: "C:\\Python27.10-x64"
    #      PYTHON_VERSION: "2.7.10"
    #      PYTHON_ARCH: "64"

    # Pre-installed Python versions, which Appveyor may upgrade to
    # a later point release.
    # See: http://www.appveyor.com/docs/installed-software#python

    - PYTHON: "C:\\Python27"
      PYTHON_VERSION: "2.7.x" # currently 2.7.9
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python27-x64"
      PYTHON_VERSION: "2.7.x" # currently 2.7.9
      PYTHON_ARCH: "64"

    - PYTHON: "C:\\Python35"
      PYTHON_VERSION: "3.5.x" # currently 3.4.3
      PYTHON_ARCH: "32"

    - PYTHON: "C:\\Python35-x64"
      PYTHON_VERSION: "3.5.x" # currently 3.4.3
      PYTHON_ARCH: "64"


install:
  - ECHO "Filesystem root:"
  - ps: "ls \"C:/\""

  - ECHO "Installed SDKs:"
  - ps: "ls \"C:/Program Files/Microsoft SDKs/Windows\""

  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart
  # the parent CMD process).
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""

  # Upgrade to the latest version of pip to avoid it displaying warnings
  # about it being out of date.
  - "pip install --disable-pip-version-check --user --upgrade pip"

  - ECHO "Workspace:"
  - ps: "ls"

  # Install the build dependencies of the project. If some dependencies contain
  # compiled extensions and are not provided as pre-built wheel packages,
  # pip will build them from source using the MSVC compiler matching the
  # target Python version and architecture
  - "pip install -r requirements.txt"
  - "pip install pytest"
  - "pip install hypothesis"
  - "pip install hypothesis-pytest"

build_script:
  - "python setup.py build"

test_script:
  - "py.test -s tests/"

after_test:
  # If tests are successful, create binary packages for the project.
  #- "python setup.py bdist_wheel"
  #- "python setup.py bdist_wininst"
  #- "python setup.py bdist_msi"
  #- ps: "ls dist"

artifacts:
  # Archive the generated packages in the ci.appveyor.com build report.
  - path: dist\*

#on_success:
#  - TODO: upload the content of dist/*.whl to a public wheelhouse
#
